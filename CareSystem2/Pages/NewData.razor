@page "/newdata"

<h1>新增資料</h1>

<EditForm Model="newPatient" OnValidSubmit="SaveData">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <table class="table">
        <tr>
            <td><label for="CaseNumber">病歷號：</label></td>
            <td><InputText id="CaseNumber" @bind-Value="newPatient.CaseNumber" /></td>
        </tr>
        <tr>
            <td><label for="Name">姓名：</label></td>
            <td><InputText id="Name" @bind-Value="newPatient.Name" /></td>
        </tr>
        <tr>
            <td><label for="Gender">性別：</label></td>
            <td>
                <InputSelect id="Gender" @bind-Value="newPatient.Gender">
                    <option value="Male">生理男</option>
                    <option value="Female">生理女</option>
                    <option value="Other">其他</option>
                </InputSelect>
            </td>
        </tr>
        <tr>
            <td><label for="BirthDate">出生日期：</label></td>
            <td><InputDate id="BirthDate" @bind-Value="newPatient.BirthDate" /></td>
        </tr>
        <tr>
            <td><label for="Age">年齡：</label></td>
            <td>@CalculateAge()</td>
        </tr>
        <tr>
            <td><label for="Id">身分證：</label></td>
            <td><InputText id="Id" @bind-Value="newPatient.Id" /></td>
        </tr>
        <tr>
            <td><label for="Phone">手機號碼：</label></td>
            <td><InputText id="Phone" @bind-Value="newPatient.Phone" /></td>
        </tr>
        <tr>
            <td><label for="Language">語言：</label></td>
            <td>
                <InputSelect id="Language" @bind-Value="newPatient.Language">
                    <option value="國語">國語</option>
                    <option value="台語">台語</option>
                    <option value="客語">客語</option>
                    <option value="英語">英語</option>
                    <option value="其他">其他</option>
                </InputSelect>
            </td>
        </tr>
        <tr>
            <td><label for="Address">地址：</label></td>
            <td><InputText id="Address" @bind-Value="newPatient.Address" /></td>
        </tr>
        <tr>
            <td><label for="MedicalHistory">病史：</label></td>
            <td><InputTextArea id="MedicalHistory" @bind-Value="newPatient.MedicalHistory" /></td>
        </tr>
        <tr>
            <td><label for="EmergencyContact">緊急聯絡人：</label></td>
            <td><InputText id="EmergencyContact" @bind-Value="newPatient.EmergencyContact" /></td>
        </tr>
        <tr>
            <td><label for="Relationship">關係：</label></td>
            <td><InputText id="Relationship" @bind-Value="newPatient.Relationship" /></td>
        </tr>
        <tr>
            <td><label for="EmergencyPhone">緊急聯絡人電話：</label></td>
            <td><InputText id="EmergencyPhone" @bind-Value="newPatient.EmergencyPhone" /></td>
        </tr>
        <tr>
            <td><label for="FamilyMember">家人：</label></td>
            <td><InputText id="FamilyMember" @bind-Value="newPatient.FamilyMember" /></td>
        </tr>
        <tr>
            <td><label for="Remarks">備註：</label></td>
            <td><InputTextArea id="Remarks" @bind-Value="newPatient.Remarks" /></td>
        </tr>
    </table>
    <div style="text-align: center;">
        <button type="submit">儲存</button>
    </div>
</EditForm>


@code {
    private Patient newPatient = new Patient
    {
        BirthDate = DateTime.Today
    };
    @inject NavigationManager NavigationManager

    public class Patient
    {
        public string CaseNumber { get; set; }
        public string Name { get; set; }
        public string Gender { get; set; }
        public DateTime BirthDate { get; set; }
        public string Id { get; set; }
        public string Phone { get; set; }
        public string Language { get; set; }
        public string Address { get; set; }
        public string MedicalHistory { get; set; }
        public string EmergencyContact { get; set; }
        public string Relationship { get; set; }
        public string EmergencyPhone { get; set; }
        public string FamilyMember { get; set; }
        public string Remarks { get; set; }
    }

    private string CalculateAge()
    {
        if (newPatient.BirthDate != DateTime.MinValue)
        {
            var today = DateTime.Today;
            var age = today.Year - newPatient.BirthDate.Year;
            if (newPatient.BirthDate > today.AddYears(-age)) age--;
            return age.ToString() + " 歲";
        }
        return "";
    }

    private void SaveData()
    {
        NavigationManager.NavigateTo("/home");
    }
}